// Code generated by gocc; DO NOT EDIT.

package parser

type (
	actionTable [numStates]actionRow
	actionRow   struct {
		canRecover bool
		actions    [numSymbols]action
	}
)

var actionTab = actionTable{
	actionRow{ // S0
		canRecover: false,
		actions: [numSymbols]action{
			nil,      // INVALID
			nil,      // ␚
			shift(2), // program
			nil,      // id
			nil,      // semicolon
			nil,      // main
			nil,      // end
			nil,      // var
			nil,      // empty
			nil,      // colon
			nil,      // comma
			nil,      // int
			nil,      // float
			nil,      // void
			nil,      // lparen
			nil,      // rparen
			nil,      // lbracket
			nil,      // rbracket
			nil,      // lbrace
			nil,      // rbrace
			nil,      // assign
			nil,      // gt
			nil,      // lt
			nil,      // neq
			nil,      // plus
			nil,      // minus
			nil,      // times
			nil,      // divide
			nil,      // cte_int
			nil,      // cte_float
			nil,      // if
			nil,      // else
			nil,      // while
			nil,      // do
			nil,      // print
			nil,      // cte_string
		},
	},
	actionRow{ // S1
		canRecover: false,
		actions: [numSymbols]action{
			nil,          // INVALID
			accept(true), // ␚
			nil,          // program
			nil,          // id
			nil,          // semicolon
			nil,          // main
			nil,          // end
			nil,          // var
			nil,          // empty
			nil,          // colon
			nil,          // comma
			nil,          // int
			nil,          // float
			nil,          // void
			nil,          // lparen
			nil,          // rparen
			nil,          // lbracket
			nil,          // rbracket
			nil,          // lbrace
			nil,          // rbrace
			nil,          // assign
			nil,          // gt
			nil,          // lt
			nil,          // neq
			nil,          // plus
			nil,          // minus
			nil,          // times
			nil,          // divide
			nil,          // cte_int
			nil,          // cte_float
			nil,          // if
			nil,          // else
			nil,          // while
			nil,          // do
			nil,          // print
			nil,          // cte_string
		},
	},
	actionRow{ // S2
		canRecover: false,
		actions: [numSymbols]action{
			nil,      // INVALID
			nil,      // ␚
			nil,      // program
			shift(3), // id
			nil,      // semicolon
			nil,      // main
			nil,      // end
			nil,      // var
			nil,      // empty
			nil,      // colon
			nil,      // comma
			nil,      // int
			nil,      // float
			nil,      // void
			nil,      // lparen
			nil,      // rparen
			nil,      // lbracket
			nil,      // rbracket
			nil,      // lbrace
			nil,      // rbrace
			nil,      // assign
			nil,      // gt
			nil,      // lt
			nil,      // neq
			nil,      // plus
			nil,      // minus
			nil,      // times
			nil,      // divide
			nil,      // cte_int
			nil,      // cte_float
			nil,      // if
			nil,      // else
			nil,      // while
			nil,      // do
			nil,      // print
			nil,      // cte_string
		},
	},
	actionRow{ // S3
		canRecover: false,
		actions: [numSymbols]action{
			nil,      // INVALID
			nil,      // ␚
			nil,      // program
			nil,      // id
			shift(4), // semicolon
			nil,      // main
			nil,      // end
			nil,      // var
			nil,      // empty
			nil,      // colon
			nil,      // comma
			nil,      // int
			nil,      // float
			nil,      // void
			nil,      // lparen
			nil,      // rparen
			nil,      // lbracket
			nil,      // rbracket
			nil,      // lbrace
			nil,      // rbrace
			nil,      // assign
			nil,      // gt
			nil,      // lt
			nil,      // neq
			nil,      // plus
			nil,      // minus
			nil,      // times
			nil,      // divide
			nil,      // cte_int
			nil,      // cte_float
			nil,      // if
			nil,      // else
			nil,      // while
			nil,      // do
			nil,      // print
			nil,      // cte_string
		},
	},
	actionRow{ // S4
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			reduce(3), // main, reduce: VarSection
			nil,       // end
			shift(6),  // var
			nil,       // empty
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			reduce(3), // void, reduce: VarSection
			nil,       // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			nil,       // minus
			nil,       // times
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S5
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			reduce(12), // main, reduce: FuncSection
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			shift(9),   // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S6
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(10), // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // empty
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			nil,       // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			nil,       // minus
			nil,       // times
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S7
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			shift(14), // main
			nil,       // end
			nil,       // var
			nil,       // empty
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			nil,       // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			nil,       // minus
			nil,       // times
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S8
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			reduce(12), // main, reduce: FuncSection
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			shift(9),   // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S9
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(16), // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // empty
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			nil,       // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			nil,       // minus
			nil,       // times
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S10
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // empty
			reduce(8), // colon, reduce: IdList
			shift(17), // comma
			nil,       // int
			nil,       // float
			nil,       // void
			nil,       // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			nil,       // minus
			nil,       // times
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S11
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			reduce(2), // main, reduce: VarSection
			nil,       // end
			nil,       // var
			nil,       // empty
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			reduce(2), // void, reduce: VarSection
			nil,       // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			nil,       // minus
			nil,       // times
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S12
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(10), // id
			nil,       // semicolon
			reduce(5), // main, reduce: VarList
			nil,       // end
			nil,       // var
			nil,       // empty
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			reduce(5), // void, reduce: VarList
			nil,       // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			nil,       // minus
			nil,       // times
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S13
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // empty
			shift(19), // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			nil,       // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			nil,       // minus
			nil,       // times
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S14
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // empty
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			nil,       // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			shift(21), // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			nil,       // minus
			nil,       // times
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S15
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			reduce(11), // main, reduce: FuncSection
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S16
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // empty
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			shift(22), // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			nil,       // minus
			nil,       // times
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S17
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(10), // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // empty
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			nil,       // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			nil,       // minus
			nil,       // times
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S18
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			reduce(4), // main, reduce: VarList
			nil,       // end
			nil,       // var
			nil,       // empty
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			reduce(4), // void, reduce: VarList
			nil,       // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			nil,       // minus
			nil,       // times
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S19
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // empty
			nil,       // colon
			nil,       // comma
			shift(25), // int
			shift(26), // float
			nil,       // void
			nil,       // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			nil,       // minus
			nil,       // times
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S20
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			shift(27), // end
			nil,       // var
			nil,       // empty
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			nil,       // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			nil,       // minus
			nil,       // times
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S21
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(28),  // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			reduce(21), // rbrace, reduce: StatementList
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			shift(36),  // if
			nil,        // else
			shift(37),  // while
			nil,        // do
			shift(38),  // print
			nil,        // cte_string
		},
	},
	actionRow{ // S22
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(39),  // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			reduce(15), // rparen, reduce: FuncParams
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S23
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // empty
			reduce(7), // colon, reduce: IdList
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			nil,       // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			nil,       // minus
			nil,       // times
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S24
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			shift(43), // semicolon
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // empty
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			nil,       // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			nil,       // minus
			nil,       // times
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S25
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			reduce(9), // semicolon, reduce: Type
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // empty
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			nil,       // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			nil,       // minus
			nil,       // times
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S26
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(10), // semicolon, reduce: Type
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S27
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			reduce(1), // ␚, reduce: Program
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // empty
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			nil,       // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			nil,       // minus
			nil,       // times
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S28
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // empty
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			shift(44), // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			nil,       // lbrace
			nil,       // rbrace
			shift(45), // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			nil,       // minus
			nil,       // times
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S29
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // empty
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			nil,       // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			nil,       // lbrace
			shift(46), // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			nil,       // minus
			nil,       // times
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S30
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(28),  // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			reduce(21), // rbrace, reduce: StatementList
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			shift(36),  // if
			nil,        // else
			shift(37),  // while
			nil,        // do
			shift(38),  // print
			nil,        // cte_string
		},
	},
	actionRow{ // S31
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			reduce(22), // id, reduce: Statement
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			reduce(22), // rbrace, reduce: Statement
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			reduce(22), // if, reduce: Statement
			nil,        // else
			reduce(22), // while, reduce: Statement
			nil,        // do
			reduce(22), // print, reduce: Statement
			nil,        // cte_string
		},
	},
	actionRow{ // S32
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			reduce(23), // id, reduce: Statement
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			reduce(23), // rbrace, reduce: Statement
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			reduce(23), // if, reduce: Statement
			nil,        // else
			reduce(23), // while, reduce: Statement
			nil,        // do
			reduce(23), // print, reduce: Statement
			nil,        // cte_string
		},
	},
	actionRow{ // S33
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			reduce(24), // id, reduce: Statement
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			reduce(24), // rbrace, reduce: Statement
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			reduce(24), // if, reduce: Statement
			nil,        // else
			reduce(24), // while, reduce: Statement
			nil,        // do
			reduce(24), // print, reduce: Statement
			nil,        // cte_string
		},
	},
	actionRow{ // S34
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			reduce(25), // id, reduce: Statement
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			reduce(25), // rbrace, reduce: Statement
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			reduce(25), // if, reduce: Statement
			nil,        // else
			reduce(25), // while, reduce: Statement
			nil,        // do
			reduce(25), // print, reduce: Statement
			nil,        // cte_string
		},
	},
	actionRow{ // S35
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			reduce(26), // id, reduce: Statement
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			reduce(26), // rbrace, reduce: Statement
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			reduce(26), // if, reduce: Statement
			nil,        // else
			reduce(26), // while, reduce: Statement
			nil,        // do
			reduce(26), // print, reduce: Statement
			nil,        // cte_string
		},
	},
	actionRow{ // S36
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // empty
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			shift(48), // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			nil,       // minus
			nil,       // times
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S37
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // empty
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			shift(49), // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			nil,       // minus
			nil,       // times
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S38
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // empty
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			shift(50), // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			nil,       // minus
			nil,       // times
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S39
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // empty
			shift(51), // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			nil,       // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			nil,       // minus
			nil,       // times
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S40
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // empty
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			nil,       // lparen
			shift(52), // rparen
			nil,       // lbracket
			nil,       // rbracket
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			nil,       // minus
			nil,       // times
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S41
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			reduce(14), // rparen, reduce: FuncParams
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S42
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			shift(53),  // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			reduce(17), // rparen, reduce: ParamList
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S43
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			reduce(6), // id, reduce: VarDeclaration
			nil,       // semicolon
			reduce(6), // main, reduce: VarDeclaration
			nil,       // end
			nil,       // var
			nil,       // empty
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			reduce(6), // void, reduce: VarDeclaration
			nil,       // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			nil,       // minus
			nil,       // times
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S44
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(54),  // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			shift(55),  // lparen
			reduce(52), // rparen, reduce: F_Args
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			shift(59),  // minus
			nil,        // times
			nil,        // divide
			shift(63),  // cte_int
			shift(64),  // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S45
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(67), // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // empty
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			shift(68), // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			shift(72), // minus
			nil,       // times
			nil,       // divide
			shift(76), // cte_int
			shift(77), // cte_float
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S46
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			reduce(19), // end, reduce: Body
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S47
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			reduce(20), // rbrace, reduce: StatementList
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S48
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(78), // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // empty
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			shift(79), // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			shift(83), // minus
			nil,       // times
			nil,       // divide
			shift(87), // cte_int
			shift(88), // cte_float
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S49
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(78), // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // empty
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			shift(79), // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			shift(83), // minus
			nil,       // times
			nil,       // divide
			shift(87), // cte_int
			shift(88), // cte_float
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S50
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(54), // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // empty
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			shift(55), // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			shift(59), // minus
			nil,       // times
			nil,       // divide
			shift(63), // cte_int
			shift(64), // cte_float
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			shift(93), // cte_string
		},
	},
	actionRow{ // S51
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // empty
			nil,       // colon
			nil,       // comma
			shift(95), // int
			shift(96), // float
			nil,       // void
			nil,       // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			nil,       // minus
			nil,       // times
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S52
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // empty
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			nil,       // lparen
			nil,       // rparen
			shift(97), // lbracket
			nil,       // rbracket
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			nil,       // minus
			nil,       // times
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S53
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(39), // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // empty
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			nil,       // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			nil,       // minus
			nil,       // times
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S54
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			reduce(43), // comma, reduce: Atom
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			reduce(43), // rparen, reduce: Atom
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(43), // gt, reduce: Atom
			reduce(43), // lt, reduce: Atom
			reduce(43), // neq, reduce: Atom
			reduce(43), // plus, reduce: Atom
			reduce(43), // minus, reduce: Atom
			reduce(43), // times, reduce: Atom
			reduce(43), // divide, reduce: Atom
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S55
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(78), // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // empty
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			shift(79), // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			shift(83), // minus
			nil,       // times
			nil,       // divide
			shift(87), // cte_int
			shift(88), // cte_float
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S56
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			shift(100), // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			reduce(54), // rparen, reduce: F_ArgsList
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S57
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			reduce(28), // comma, reduce: Expression
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			reduce(28), // rparen, reduce: Expression
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			shift(102), // gt
			shift(103), // lt
			shift(104), // neq
			shift(105), // plus
			shift(106), // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S58
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			reduce(35), // comma, reduce: Exp
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			reduce(35), // rparen, reduce: Exp
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(35), // gt, reduce: Exp
			reduce(35), // lt, reduce: Exp
			reduce(35), // neq, reduce: Exp
			reduce(35), // plus, reduce: Exp
			reduce(35), // minus, reduce: Exp
			shift(107), // times
			shift(108), // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S59
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(54), // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // empty
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			nil,       // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			nil,       // minus
			nil,       // times
			nil,       // divide
			shift(63), // cte_int
			shift(64), // cte_float
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S60
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			reduce(38), // comma, reduce: Term
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			reduce(38), // rparen, reduce: Term
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(38), // gt, reduce: Term
			reduce(38), // lt, reduce: Term
			reduce(38), // neq, reduce: Term
			reduce(38), // plus, reduce: Term
			reduce(38), // minus, reduce: Term
			reduce(38), // times, reduce: Term
			reduce(38), // divide, reduce: Term
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S61
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			reduce(41), // comma, reduce: Factor
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			reduce(41), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(41), // gt, reduce: Factor
			reduce(41), // lt, reduce: Factor
			reduce(41), // neq, reduce: Factor
			reduce(41), // plus, reduce: Factor
			reduce(41), // minus, reduce: Factor
			reduce(41), // times, reduce: Factor
			reduce(41), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S62
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			reduce(42), // comma, reduce: Atom
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			reduce(42), // rparen, reduce: Atom
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(42), // gt, reduce: Atom
			reduce(42), // lt, reduce: Atom
			reduce(42), // neq, reduce: Atom
			reduce(42), // plus, reduce: Atom
			reduce(42), // minus, reduce: Atom
			reduce(42), // times, reduce: Atom
			reduce(42), // divide, reduce: Atom
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S63
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			reduce(44), // comma, reduce: Cte
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			reduce(44), // rparen, reduce: Cte
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(44), // gt, reduce: Cte
			reduce(44), // lt, reduce: Cte
			reduce(44), // neq, reduce: Cte
			reduce(44), // plus, reduce: Cte
			reduce(44), // minus, reduce: Cte
			reduce(44), // times, reduce: Cte
			reduce(44), // divide, reduce: Cte
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S64
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			reduce(45), // comma, reduce: Cte
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			reduce(45), // rparen, reduce: Cte
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(45), // gt, reduce: Cte
			reduce(45), // lt, reduce: Cte
			reduce(45), // neq, reduce: Cte
			reduce(45), // plus, reduce: Cte
			reduce(45), // minus, reduce: Cte
			reduce(45), // times, reduce: Cte
			reduce(45), // divide, reduce: Cte
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S65
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			shift(110), // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S66
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			reduce(51), // rparen, reduce: F_Args
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S67
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(43), // semicolon, reduce: Atom
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(43), // gt, reduce: Atom
			reduce(43), // lt, reduce: Atom
			reduce(43), // neq, reduce: Atom
			reduce(43), // plus, reduce: Atom
			reduce(43), // minus, reduce: Atom
			reduce(43), // times, reduce: Atom
			reduce(43), // divide, reduce: Atom
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S68
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(78), // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // empty
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			shift(79), // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			shift(83), // minus
			nil,       // times
			nil,       // divide
			shift(87), // cte_int
			shift(88), // cte_float
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S69
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			shift(112), // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S70
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(28), // semicolon, reduce: Expression
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			shift(102), // gt
			shift(103), // lt
			shift(104), // neq
			shift(114), // plus
			shift(115), // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S71
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(35), // semicolon, reduce: Exp
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(35), // gt, reduce: Exp
			reduce(35), // lt, reduce: Exp
			reduce(35), // neq, reduce: Exp
			reduce(35), // plus, reduce: Exp
			reduce(35), // minus, reduce: Exp
			shift(116), // times
			shift(117), // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S72
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(67), // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // empty
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			nil,       // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			nil,       // minus
			nil,       // times
			nil,       // divide
			shift(76), // cte_int
			shift(77), // cte_float
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S73
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(38), // semicolon, reduce: Term
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(38), // gt, reduce: Term
			reduce(38), // lt, reduce: Term
			reduce(38), // neq, reduce: Term
			reduce(38), // plus, reduce: Term
			reduce(38), // minus, reduce: Term
			reduce(38), // times, reduce: Term
			reduce(38), // divide, reduce: Term
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S74
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(41), // semicolon, reduce: Factor
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(41), // gt, reduce: Factor
			reduce(41), // lt, reduce: Factor
			reduce(41), // neq, reduce: Factor
			reduce(41), // plus, reduce: Factor
			reduce(41), // minus, reduce: Factor
			reduce(41), // times, reduce: Factor
			reduce(41), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S75
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(42), // semicolon, reduce: Atom
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(42), // gt, reduce: Atom
			reduce(42), // lt, reduce: Atom
			reduce(42), // neq, reduce: Atom
			reduce(42), // plus, reduce: Atom
			reduce(42), // minus, reduce: Atom
			reduce(42), // times, reduce: Atom
			reduce(42), // divide, reduce: Atom
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S76
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(44), // semicolon, reduce: Cte
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(44), // gt, reduce: Cte
			reduce(44), // lt, reduce: Cte
			reduce(44), // neq, reduce: Cte
			reduce(44), // plus, reduce: Cte
			reduce(44), // minus, reduce: Cte
			reduce(44), // times, reduce: Cte
			reduce(44), // divide, reduce: Cte
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S77
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(45), // semicolon, reduce: Cte
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(45), // gt, reduce: Cte
			reduce(45), // lt, reduce: Cte
			reduce(45), // neq, reduce: Cte
			reduce(45), // plus, reduce: Cte
			reduce(45), // minus, reduce: Cte
			reduce(45), // times, reduce: Cte
			reduce(45), // divide, reduce: Cte
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S78
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			reduce(43), // rparen, reduce: Atom
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(43), // gt, reduce: Atom
			reduce(43), // lt, reduce: Atom
			reduce(43), // neq, reduce: Atom
			reduce(43), // plus, reduce: Atom
			reduce(43), // minus, reduce: Atom
			reduce(43), // times, reduce: Atom
			reduce(43), // divide, reduce: Atom
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S79
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(78), // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // empty
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			shift(79), // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			shift(83), // minus
			nil,       // times
			nil,       // divide
			shift(87), // cte_int
			shift(88), // cte_float
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S80
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			shift(120), // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S81
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			reduce(28), // rparen, reduce: Expression
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			shift(102), // gt
			shift(103), // lt
			shift(104), // neq
			shift(122), // plus
			shift(123), // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S82
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			reduce(35), // rparen, reduce: Exp
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(35), // gt, reduce: Exp
			reduce(35), // lt, reduce: Exp
			reduce(35), // neq, reduce: Exp
			reduce(35), // plus, reduce: Exp
			reduce(35), // minus, reduce: Exp
			shift(124), // times
			shift(125), // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S83
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(78), // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // empty
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			nil,       // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			nil,       // minus
			nil,       // times
			nil,       // divide
			shift(87), // cte_int
			shift(88), // cte_float
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S84
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			reduce(38), // rparen, reduce: Term
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(38), // gt, reduce: Term
			reduce(38), // lt, reduce: Term
			reduce(38), // neq, reduce: Term
			reduce(38), // plus, reduce: Term
			reduce(38), // minus, reduce: Term
			reduce(38), // times, reduce: Term
			reduce(38), // divide, reduce: Term
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S85
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			reduce(41), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(41), // gt, reduce: Factor
			reduce(41), // lt, reduce: Factor
			reduce(41), // neq, reduce: Factor
			reduce(41), // plus, reduce: Factor
			reduce(41), // minus, reduce: Factor
			reduce(41), // times, reduce: Factor
			reduce(41), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S86
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			reduce(42), // rparen, reduce: Atom
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(42), // gt, reduce: Atom
			reduce(42), // lt, reduce: Atom
			reduce(42), // neq, reduce: Atom
			reduce(42), // plus, reduce: Atom
			reduce(42), // minus, reduce: Atom
			reduce(42), // times, reduce: Atom
			reduce(42), // divide, reduce: Atom
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S87
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			reduce(44), // rparen, reduce: Cte
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(44), // gt, reduce: Cte
			reduce(44), // lt, reduce: Cte
			reduce(44), // neq, reduce: Cte
			reduce(44), // plus, reduce: Cte
			reduce(44), // minus, reduce: Cte
			reduce(44), // times, reduce: Cte
			reduce(44), // divide, reduce: Cte
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S88
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			reduce(45), // rparen, reduce: Cte
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(45), // gt, reduce: Cte
			reduce(45), // lt, reduce: Cte
			reduce(45), // neq, reduce: Cte
			reduce(45), // plus, reduce: Cte
			reduce(45), // minus, reduce: Cte
			reduce(45), // times, reduce: Cte
			reduce(45), // divide, reduce: Cte
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S89
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			shift(127), // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S90
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			reduce(58), // comma, reduce: PrintVar
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			reduce(58), // rparen, reduce: PrintVar
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S91
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			shift(128), // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S92
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			shift(129), // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			reduce(57), // rparen, reduce: PrintVarList
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S93
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			reduce(59), // comma, reduce: PrintVar
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			reduce(59), // rparen, reduce: PrintVar
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S94
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			reduce(18), // comma, reduce: Param
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			reduce(18), // rparen, reduce: Param
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S95
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // empty
			nil,       // colon
			reduce(9), // comma, reduce: Type
			nil,       // int
			nil,       // float
			nil,       // void
			nil,       // lparen
			reduce(9), // rparen, reduce: Type
			nil,       // lbracket
			nil,       // rbracket
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			nil,       // minus
			nil,       // times
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S96
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			reduce(10), // comma, reduce: Type
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			reduce(10), // rparen, reduce: Type
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S97
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			shift(131), // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			reduce(3),  // lbrace, reduce: VarSection
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S98
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			reduce(16), // rparen, reduce: ParamList
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S99
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			shift(132), // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S100
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(54), // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // empty
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			shift(55), // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			shift(59), // minus
			nil,       // times
			nil,       // divide
			shift(63), // cte_int
			shift(64), // cte_float
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S101
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(134), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			shift(135), // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			shift(138), // minus
			nil,        // times
			nil,        // divide
			shift(142), // cte_int
			shift(143), // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S102
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			reduce(30), // id, reduce: RelOp
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			reduce(30), // lparen, reduce: RelOp
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			reduce(30), // minus, reduce: RelOp
			nil,        // times
			nil,        // divide
			reduce(30), // cte_int, reduce: RelOp
			reduce(30), // cte_float, reduce: RelOp
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S103
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			reduce(31), // id, reduce: RelOp
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			reduce(31), // lparen, reduce: RelOp
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			reduce(31), // minus, reduce: RelOp
			nil,        // times
			nil,        // divide
			reduce(31), // cte_int, reduce: RelOp
			reduce(31), // cte_float, reduce: RelOp
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S104
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			reduce(32), // id, reduce: RelOp
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			reduce(32), // lparen, reduce: RelOp
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			reduce(32), // minus, reduce: RelOp
			nil,        // times
			nil,        // divide
			reduce(32), // cte_int, reduce: RelOp
			reduce(32), // cte_float, reduce: RelOp
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S105
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(54), // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // empty
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			shift(55), // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			shift(59), // minus
			nil,       // times
			nil,       // divide
			shift(63), // cte_int
			shift(64), // cte_float
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S106
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(54), // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // empty
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			shift(55), // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			shift(59), // minus
			nil,       // times
			nil,       // divide
			shift(63), // cte_int
			shift(64), // cte_float
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S107
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(54), // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // empty
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			shift(55), // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			shift(59), // minus
			nil,       // times
			nil,       // divide
			shift(63), // cte_int
			shift(64), // cte_float
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S108
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(54), // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // empty
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			shift(55), // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			shift(59), // minus
			nil,       // times
			nil,       // divide
			shift(63), // cte_int
			shift(64), // cte_float
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S109
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			reduce(40), // comma, reduce: Factor
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			reduce(40), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(40), // gt, reduce: Factor
			reduce(40), // lt, reduce: Factor
			reduce(40), // neq, reduce: Factor
			reduce(40), // plus, reduce: Factor
			reduce(40), // minus, reduce: Factor
			reduce(40), // times, reduce: Factor
			reduce(40), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S110
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			shift(148), // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S111
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			shift(149), // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S112
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			reduce(27), // id, reduce: Assign
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			reduce(27), // rbrace, reduce: Assign
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			reduce(27), // if, reduce: Assign
			nil,        // else
			reduce(27), // while, reduce: Assign
			nil,        // do
			reduce(27), // print, reduce: Assign
			nil,        // cte_string
		},
	},
	actionRow{ // S113
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(150), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			shift(151), // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			shift(154), // minus
			nil,        // times
			nil,        // divide
			shift(158), // cte_int
			shift(159), // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S114
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(67), // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // empty
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			shift(68), // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			shift(72), // minus
			nil,       // times
			nil,       // divide
			shift(76), // cte_int
			shift(77), // cte_float
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S115
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(67), // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // empty
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			shift(68), // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			shift(72), // minus
			nil,       // times
			nil,       // divide
			shift(76), // cte_int
			shift(77), // cte_float
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S116
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(67), // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // empty
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			shift(68), // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			shift(72), // minus
			nil,       // times
			nil,       // divide
			shift(76), // cte_int
			shift(77), // cte_float
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S117
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(67), // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // empty
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			shift(68), // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			shift(72), // minus
			nil,       // times
			nil,       // divide
			shift(76), // cte_int
			shift(77), // cte_float
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S118
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(40), // semicolon, reduce: Factor
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(40), // gt, reduce: Factor
			reduce(40), // lt, reduce: Factor
			reduce(40), // neq, reduce: Factor
			reduce(40), // plus, reduce: Factor
			reduce(40), // minus, reduce: Factor
			reduce(40), // times, reduce: Factor
			reduce(40), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S119
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			shift(164), // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S120
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			shift(166), // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S121
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(167), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			shift(168), // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			shift(171), // minus
			nil,        // times
			nil,        // divide
			shift(175), // cte_int
			shift(176), // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S122
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(78), // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // empty
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			shift(79), // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			shift(83), // minus
			nil,       // times
			nil,       // divide
			shift(87), // cte_int
			shift(88), // cte_float
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S123
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(78), // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // empty
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			shift(79), // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			shift(83), // minus
			nil,       // times
			nil,       // divide
			shift(87), // cte_int
			shift(88), // cte_float
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S124
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(78), // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // empty
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			shift(79), // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			shift(83), // minus
			nil,       // times
			nil,       // divide
			shift(87), // cte_int
			shift(88), // cte_float
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S125
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(78), // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // empty
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			shift(79), // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			shift(83), // minus
			nil,       // times
			nil,       // divide
			shift(87), // cte_int
			shift(88), // cte_float
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S126
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			reduce(40), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(40), // gt, reduce: Factor
			reduce(40), // lt, reduce: Factor
			reduce(40), // neq, reduce: Factor
			reduce(40), // plus, reduce: Factor
			reduce(40), // minus, reduce: Factor
			reduce(40), // times, reduce: Factor
			reduce(40), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S127
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			shift(181), // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S128
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			shift(182), // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S129
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(54), // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // empty
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			shift(55), // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			shift(59), // minus
			nil,       // times
			nil,       // divide
			shift(63), // cte_int
			shift(64), // cte_float
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			shift(93), // cte_string
		},
	},
	actionRow{ // S130
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			shift(185), // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S131
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(10), // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // empty
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			nil,       // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			nil,       // minus
			nil,       // times
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S132
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			reduce(39), // comma, reduce: Factor
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			reduce(39), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(39), // gt, reduce: Factor
			reduce(39), // lt, reduce: Factor
			reduce(39), // neq, reduce: Factor
			reduce(39), // plus, reduce: Factor
			reduce(39), // minus, reduce: Factor
			reduce(39), // times, reduce: Factor
			reduce(39), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S133
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			reduce(53), // rparen, reduce: F_ArgsList
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S134
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			reduce(43), // comma, reduce: Atom
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			reduce(43), // rparen, reduce: Atom
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			reduce(43), // plus, reduce: Atom
			reduce(43), // minus, reduce: Atom
			reduce(43), // times, reduce: Atom
			reduce(43), // divide, reduce: Atom
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S135
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(78), // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // empty
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			shift(79), // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			shift(83), // minus
			nil,       // times
			nil,       // divide
			shift(87), // cte_int
			shift(88), // cte_float
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S136
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			reduce(29), // comma, reduce: Expression
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			reduce(29), // rparen, reduce: Expression
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			shift(190), // plus
			shift(191), // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S137
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			reduce(35), // comma, reduce: Exp
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			reduce(35), // rparen, reduce: Exp
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			reduce(35), // plus, reduce: Exp
			reduce(35), // minus, reduce: Exp
			shift(192), // times
			shift(193), // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S138
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(134), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			shift(142), // cte_int
			shift(143), // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S139
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			reduce(38), // comma, reduce: Term
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			reduce(38), // rparen, reduce: Term
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			reduce(38), // plus, reduce: Term
			reduce(38), // minus, reduce: Term
			reduce(38), // times, reduce: Term
			reduce(38), // divide, reduce: Term
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S140
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			reduce(41), // comma, reduce: Factor
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			reduce(41), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			reduce(41), // plus, reduce: Factor
			reduce(41), // minus, reduce: Factor
			reduce(41), // times, reduce: Factor
			reduce(41), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S141
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			reduce(42), // comma, reduce: Atom
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			reduce(42), // rparen, reduce: Atom
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			reduce(42), // plus, reduce: Atom
			reduce(42), // minus, reduce: Atom
			reduce(42), // times, reduce: Atom
			reduce(42), // divide, reduce: Atom
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S142
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			reduce(44), // comma, reduce: Cte
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			reduce(44), // rparen, reduce: Cte
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			reduce(44), // plus, reduce: Cte
			reduce(44), // minus, reduce: Cte
			reduce(44), // times, reduce: Cte
			reduce(44), // divide, reduce: Cte
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S143
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			reduce(45), // comma, reduce: Cte
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			reduce(45), // rparen, reduce: Cte
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			reduce(45), // plus, reduce: Cte
			reduce(45), // minus, reduce: Cte
			reduce(45), // times, reduce: Cte
			reduce(45), // divide, reduce: Cte
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S144
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			reduce(33), // comma, reduce: Exp
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			reduce(33), // rparen, reduce: Exp
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(33), // gt, reduce: Exp
			reduce(33), // lt, reduce: Exp
			reduce(33), // neq, reduce: Exp
			reduce(33), // plus, reduce: Exp
			reduce(33), // minus, reduce: Exp
			shift(107), // times
			shift(108), // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S145
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			reduce(34), // comma, reduce: Exp
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			reduce(34), // rparen, reduce: Exp
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(34), // gt, reduce: Exp
			reduce(34), // lt, reduce: Exp
			reduce(34), // neq, reduce: Exp
			reduce(34), // plus, reduce: Exp
			reduce(34), // minus, reduce: Exp
			shift(107), // times
			shift(108), // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S146
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			reduce(36), // comma, reduce: Term
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			reduce(36), // rparen, reduce: Term
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(36), // gt, reduce: Term
			reduce(36), // lt, reduce: Term
			reduce(36), // neq, reduce: Term
			reduce(36), // plus, reduce: Term
			reduce(36), // minus, reduce: Term
			reduce(36), // times, reduce: Term
			reduce(36), // divide, reduce: Term
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S147
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			reduce(37), // comma, reduce: Term
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			reduce(37), // rparen, reduce: Term
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(37), // gt, reduce: Term
			reduce(37), // lt, reduce: Term
			reduce(37), // neq, reduce: Term
			reduce(37), // plus, reduce: Term
			reduce(37), // minus, reduce: Term
			reduce(37), // times, reduce: Term
			reduce(37), // divide, reduce: Term
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S148
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			reduce(50), // id, reduce: F_Call
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			reduce(50), // rbrace, reduce: F_Call
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			reduce(50), // if, reduce: F_Call
			nil,        // else
			reduce(50), // while, reduce: F_Call
			nil,        // do
			reduce(50), // print, reduce: F_Call
			nil,        // cte_string
		},
	},
	actionRow{ // S149
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(39), // semicolon, reduce: Factor
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(39), // gt, reduce: Factor
			reduce(39), // lt, reduce: Factor
			reduce(39), // neq, reduce: Factor
			reduce(39), // plus, reduce: Factor
			reduce(39), // minus, reduce: Factor
			reduce(39), // times, reduce: Factor
			reduce(39), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S150
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(43), // semicolon, reduce: Atom
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			reduce(43), // plus, reduce: Atom
			reduce(43), // minus, reduce: Atom
			reduce(43), // times, reduce: Atom
			reduce(43), // divide, reduce: Atom
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S151
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(78), // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // empty
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			shift(79), // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			shift(83), // minus
			nil,       // times
			nil,       // divide
			shift(87), // cte_int
			shift(88), // cte_float
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S152
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(29), // semicolon, reduce: Expression
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			shift(196), // plus
			shift(197), // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S153
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(35), // semicolon, reduce: Exp
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			reduce(35), // plus, reduce: Exp
			reduce(35), // minus, reduce: Exp
			shift(198), // times
			shift(199), // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S154
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(150), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			shift(158), // cte_int
			shift(159), // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S155
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(38), // semicolon, reduce: Term
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			reduce(38), // plus, reduce: Term
			reduce(38), // minus, reduce: Term
			reduce(38), // times, reduce: Term
			reduce(38), // divide, reduce: Term
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S156
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(41), // semicolon, reduce: Factor
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			reduce(41), // plus, reduce: Factor
			reduce(41), // minus, reduce: Factor
			reduce(41), // times, reduce: Factor
			reduce(41), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S157
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(42), // semicolon, reduce: Atom
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			reduce(42), // plus, reduce: Atom
			reduce(42), // minus, reduce: Atom
			reduce(42), // times, reduce: Atom
			reduce(42), // divide, reduce: Atom
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S158
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(44), // semicolon, reduce: Cte
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			reduce(44), // plus, reduce: Cte
			reduce(44), // minus, reduce: Cte
			reduce(44), // times, reduce: Cte
			reduce(44), // divide, reduce: Cte
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S159
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(45), // semicolon, reduce: Cte
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			reduce(45), // plus, reduce: Cte
			reduce(45), // minus, reduce: Cte
			reduce(45), // times, reduce: Cte
			reduce(45), // divide, reduce: Cte
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S160
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(33), // semicolon, reduce: Exp
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(33), // gt, reduce: Exp
			reduce(33), // lt, reduce: Exp
			reduce(33), // neq, reduce: Exp
			reduce(33), // plus, reduce: Exp
			reduce(33), // minus, reduce: Exp
			shift(116), // times
			shift(117), // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S161
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(34), // semicolon, reduce: Exp
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(34), // gt, reduce: Exp
			reduce(34), // lt, reduce: Exp
			reduce(34), // neq, reduce: Exp
			reduce(34), // plus, reduce: Exp
			reduce(34), // minus, reduce: Exp
			shift(116), // times
			shift(117), // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S162
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(36), // semicolon, reduce: Term
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(36), // gt, reduce: Term
			reduce(36), // lt, reduce: Term
			reduce(36), // neq, reduce: Term
			reduce(36), // plus, reduce: Term
			reduce(36), // minus, reduce: Term
			reduce(36), // times, reduce: Term
			reduce(36), // divide, reduce: Term
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S163
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(37), // semicolon, reduce: Term
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(37), // gt, reduce: Term
			reduce(37), // lt, reduce: Term
			reduce(37), // neq, reduce: Term
			reduce(37), // plus, reduce: Term
			reduce(37), // minus, reduce: Term
			reduce(37), // times, reduce: Term
			reduce(37), // divide, reduce: Term
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S164
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			reduce(39), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(39), // gt, reduce: Factor
			reduce(39), // lt, reduce: Factor
			reduce(39), // neq, reduce: Factor
			reduce(39), // plus, reduce: Factor
			reduce(39), // minus, reduce: Factor
			reduce(39), // times, reduce: Factor
			reduce(39), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S165
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(48), // semicolon, reduce: ElseOptional
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			shift(202), // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S166
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(28),  // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			reduce(21), // rbrace, reduce: StatementList
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			shift(36),  // if
			nil,        // else
			shift(37),  // while
			nil,        // do
			shift(38),  // print
			nil,        // cte_string
		},
	},
	actionRow{ // S167
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			reduce(43), // rparen, reduce: Atom
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			reduce(43), // plus, reduce: Atom
			reduce(43), // minus, reduce: Atom
			reduce(43), // times, reduce: Atom
			reduce(43), // divide, reduce: Atom
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S168
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(78), // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // empty
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			shift(79), // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			shift(83), // minus
			nil,       // times
			nil,       // divide
			shift(87), // cte_int
			shift(88), // cte_float
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S169
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			reduce(29), // rparen, reduce: Expression
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			shift(205), // plus
			shift(206), // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S170
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			reduce(35), // rparen, reduce: Exp
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			reduce(35), // plus, reduce: Exp
			reduce(35), // minus, reduce: Exp
			shift(207), // times
			shift(208), // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S171
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(167), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			shift(175), // cte_int
			shift(176), // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S172
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			reduce(38), // rparen, reduce: Term
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			reduce(38), // plus, reduce: Term
			reduce(38), // minus, reduce: Term
			reduce(38), // times, reduce: Term
			reduce(38), // divide, reduce: Term
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S173
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			reduce(41), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			reduce(41), // plus, reduce: Factor
			reduce(41), // minus, reduce: Factor
			reduce(41), // times, reduce: Factor
			reduce(41), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S174
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			reduce(42), // rparen, reduce: Atom
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			reduce(42), // plus, reduce: Atom
			reduce(42), // minus, reduce: Atom
			reduce(42), // times, reduce: Atom
			reduce(42), // divide, reduce: Atom
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S175
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			reduce(44), // rparen, reduce: Cte
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			reduce(44), // plus, reduce: Cte
			reduce(44), // minus, reduce: Cte
			reduce(44), // times, reduce: Cte
			reduce(44), // divide, reduce: Cte
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S176
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			reduce(45), // rparen, reduce: Cte
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			reduce(45), // plus, reduce: Cte
			reduce(45), // minus, reduce: Cte
			reduce(45), // times, reduce: Cte
			reduce(45), // divide, reduce: Cte
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S177
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			reduce(33), // rparen, reduce: Exp
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(33), // gt, reduce: Exp
			reduce(33), // lt, reduce: Exp
			reduce(33), // neq, reduce: Exp
			reduce(33), // plus, reduce: Exp
			reduce(33), // minus, reduce: Exp
			shift(124), // times
			shift(125), // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S178
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			reduce(34), // rparen, reduce: Exp
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(34), // gt, reduce: Exp
			reduce(34), // lt, reduce: Exp
			reduce(34), // neq, reduce: Exp
			reduce(34), // plus, reduce: Exp
			reduce(34), // minus, reduce: Exp
			shift(124), // times
			shift(125), // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S179
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			reduce(36), // rparen, reduce: Term
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(36), // gt, reduce: Term
			reduce(36), // lt, reduce: Term
			reduce(36), // neq, reduce: Term
			reduce(36), // plus, reduce: Term
			reduce(36), // minus, reduce: Term
			reduce(36), // times, reduce: Term
			reduce(36), // divide, reduce: Term
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S180
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			reduce(37), // rparen, reduce: Term
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			reduce(37), // gt, reduce: Term
			reduce(37), // lt, reduce: Term
			reduce(37), // neq, reduce: Term
			reduce(37), // plus, reduce: Term
			reduce(37), // minus, reduce: Term
			reduce(37), // times, reduce: Term
			reduce(37), // divide, reduce: Term
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S181
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			shift(211), // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S182
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			reduce(55), // id, reduce: Print
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			reduce(55), // rbrace, reduce: Print
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			reduce(55), // if, reduce: Print
			nil,        // else
			reduce(55), // while, reduce: Print
			nil,        // do
			reduce(55), // print, reduce: Print
			nil,        // cte_string
		},
	},
	actionRow{ // S183
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			reduce(56), // rparen, reduce: PrintVarList
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S184
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			shift(212), // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S185
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(28),  // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			reduce(21), // rbrace, reduce: StatementList
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			shift(36),  // if
			nil,        // else
			shift(37),  // while
			nil,        // do
			shift(38),  // print
			nil,        // cte_string
		},
	},
	actionRow{ // S186
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // empty
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			nil,       // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			reduce(2), // lbrace, reduce: VarSection
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			nil,       // minus
			nil,       // times
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S187
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(10), // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // empty
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			nil,       // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			reduce(5), // lbrace, reduce: VarList
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			nil,       // minus
			nil,       // times
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S188
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			shift(215), // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S189
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			shift(216), // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S190
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(134), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			shift(135), // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			shift(138), // minus
			nil,        // times
			nil,        // divide
			shift(142), // cte_int
			shift(143), // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S191
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(134), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			shift(135), // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			shift(138), // minus
			nil,        // times
			nil,        // divide
			shift(142), // cte_int
			shift(143), // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S192
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(134), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			shift(135), // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			shift(138), // minus
			nil,        // times
			nil,        // divide
			shift(142), // cte_int
			shift(143), // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S193
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(134), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			shift(135), // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			shift(138), // minus
			nil,        // times
			nil,        // divide
			shift(142), // cte_int
			shift(143), // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S194
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			reduce(40), // comma, reduce: Factor
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			reduce(40), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			reduce(40), // plus, reduce: Factor
			reduce(40), // minus, reduce: Factor
			reduce(40), // times, reduce: Factor
			reduce(40), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S195
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			shift(221), // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S196
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(150), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			shift(151), // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			shift(154), // minus
			nil,        // times
			nil,        // divide
			shift(158), // cte_int
			shift(159), // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S197
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(150), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			shift(151), // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			shift(154), // minus
			nil,        // times
			nil,        // divide
			shift(158), // cte_int
			shift(159), // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S198
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(150), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			shift(151), // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			shift(154), // minus
			nil,        // times
			nil,        // divide
			shift(158), // cte_int
			shift(159), // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S199
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(150), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			shift(151), // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			shift(154), // minus
			nil,        // times
			nil,        // divide
			shift(158), // cte_int
			shift(159), // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S200
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(40), // semicolon, reduce: Factor
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			reduce(40), // plus, reduce: Factor
			reduce(40), // minus, reduce: Factor
			reduce(40), // times, reduce: Factor
			reduce(40), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S201
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			shift(226), // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S202
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			shift(211), // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S203
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			shift(228), // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S204
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			shift(229), // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S205
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(167), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			shift(168), // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			shift(171), // minus
			nil,        // times
			nil,        // divide
			shift(175), // cte_int
			shift(176), // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S206
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(167), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			shift(168), // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			shift(171), // minus
			nil,        // times
			nil,        // divide
			shift(175), // cte_int
			shift(176), // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S207
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(167), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			shift(168), // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			shift(171), // minus
			nil,        // times
			nil,        // divide
			shift(175), // cte_int
			shift(176), // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S208
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(167), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			shift(168), // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			shift(171), // minus
			nil,        // times
			nil,        // divide
			shift(175), // cte_int
			shift(176), // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S209
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			reduce(40), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			reduce(40), // plus, reduce: Factor
			reduce(40), // minus, reduce: Factor
			reduce(40), // times, reduce: Factor
			reduce(40), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S210
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			shift(234), // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S211
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(28),  // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			reduce(21), // rbrace, reduce: StatementList
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			shift(36),  // if
			nil,        // else
			shift(37),  // while
			nil,        // do
			shift(38),  // print
			nil,        // cte_string
		},
	},
	actionRow{ // S212
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			shift(236), // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S213
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			shift(237), // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S214
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // empty
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			nil,       // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			reduce(4), // lbrace, reduce: VarList
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			nil,       // minus
			nil,       // times
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S215
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // empty
			nil,       // colon
			nil,       // comma
			shift(25), // int
			shift(26), // float
			nil,       // void
			nil,       // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			nil,       // minus
			nil,       // times
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
		},
	},
	actionRow{ // S216
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			reduce(39), // comma, reduce: Factor
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			reduce(39), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			reduce(39), // plus, reduce: Factor
			reduce(39), // minus, reduce: Factor
			reduce(39), // times, reduce: Factor
			reduce(39), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S217
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			reduce(33), // comma, reduce: Exp
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			reduce(33), // rparen, reduce: Exp
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			reduce(33), // plus, reduce: Exp
			reduce(33), // minus, reduce: Exp
			shift(192), // times
			shift(193), // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S218
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			reduce(34), // comma, reduce: Exp
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			reduce(34), // rparen, reduce: Exp
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			reduce(34), // plus, reduce: Exp
			reduce(34), // minus, reduce: Exp
			shift(192), // times
			shift(193), // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S219
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			reduce(36), // comma, reduce: Term
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			reduce(36), // rparen, reduce: Term
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			reduce(36), // plus, reduce: Term
			reduce(36), // minus, reduce: Term
			reduce(36), // times, reduce: Term
			reduce(36), // divide, reduce: Term
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S220
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			reduce(37), // comma, reduce: Term
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			reduce(37), // rparen, reduce: Term
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			reduce(37), // plus, reduce: Term
			reduce(37), // minus, reduce: Term
			reduce(37), // times, reduce: Term
			reduce(37), // divide, reduce: Term
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S221
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(39), // semicolon, reduce: Factor
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			reduce(39), // plus, reduce: Factor
			reduce(39), // minus, reduce: Factor
			reduce(39), // times, reduce: Factor
			reduce(39), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S222
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(33), // semicolon, reduce: Exp
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			reduce(33), // plus, reduce: Exp
			reduce(33), // minus, reduce: Exp
			shift(198), // times
			shift(199), // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S223
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(34), // semicolon, reduce: Exp
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			reduce(34), // plus, reduce: Exp
			reduce(34), // minus, reduce: Exp
			shift(198), // times
			shift(199), // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S224
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(36), // semicolon, reduce: Term
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			reduce(36), // plus, reduce: Term
			reduce(36), // minus, reduce: Term
			reduce(36), // times, reduce: Term
			reduce(36), // divide, reduce: Term
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S225
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(37), // semicolon, reduce: Term
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			reduce(37), // plus, reduce: Term
			reduce(37), // minus, reduce: Term
			reduce(37), // times, reduce: Term
			reduce(37), // divide, reduce: Term
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S226
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			reduce(46), // id, reduce: Condition
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			reduce(46), // rbrace, reduce: Condition
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			reduce(46), // if, reduce: Condition
			nil,        // else
			reduce(46), // while, reduce: Condition
			nil,        // do
			reduce(46), // print, reduce: Condition
			nil,        // cte_string
		},
	},
	actionRow{ // S227
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(47), // semicolon, reduce: ElseOptional
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S228
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(19), // semicolon, reduce: Body
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			reduce(19), // else, reduce: Body
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S229
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			reduce(39), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			reduce(39), // plus, reduce: Factor
			reduce(39), // minus, reduce: Factor
			reduce(39), // times, reduce: Factor
			reduce(39), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S230
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			reduce(33), // rparen, reduce: Exp
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			reduce(33), // plus, reduce: Exp
			reduce(33), // minus, reduce: Exp
			shift(207), // times
			shift(208), // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S231
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			reduce(34), // rparen, reduce: Exp
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			reduce(34), // plus, reduce: Exp
			reduce(34), // minus, reduce: Exp
			shift(207), // times
			shift(208), // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S232
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			reduce(36), // rparen, reduce: Term
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			reduce(36), // plus, reduce: Term
			reduce(36), // minus, reduce: Term
			reduce(36), // times, reduce: Term
			reduce(36), // divide, reduce: Term
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S233
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			reduce(37), // rparen, reduce: Term
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			reduce(37), // plus, reduce: Term
			reduce(37), // minus, reduce: Term
			reduce(37), // times, reduce: Term
			reduce(37), // divide, reduce: Term
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S234
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			reduce(49), // id, reduce: Cycle
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			reduce(49), // rbrace, reduce: Cycle
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			reduce(49), // if, reduce: Cycle
			nil,        // else
			reduce(49), // while, reduce: Cycle
			nil,        // do
			reduce(49), // print, reduce: Cycle
			nil,        // cte_string
		},
	},
	actionRow{ // S235
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			shift(239), // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S236
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			reduce(13), // main, reduce: FuncDeclaration
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			reduce(13), // void, reduce: FuncDeclaration
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S237
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			reduce(19), // rbracket, reduce: Body
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S238
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			shift(240), // semicolon
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S239
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(19), // semicolon, reduce: Body
			nil,        // main
			nil,        // end
			nil,        // var
			nil,        // empty
			nil,        // colon
			nil,        // comma
			nil,        // int
			nil,        // float
			nil,        // void
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // gt
			nil,        // lt
			nil,        // neq
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
		},
	},
	actionRow{ // S240
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			reduce(6), // id, reduce: VarDeclaration
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // var
			nil,       // empty
			nil,       // colon
			nil,       // comma
			nil,       // int
			nil,       // float
			nil,       // void
			nil,       // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			reduce(6), // lbrace, reduce: VarDeclaration
			nil,       // rbrace
			nil,       // assign
			nil,       // gt
			nil,       // lt
			nil,       // neq
			nil,       // plus
			nil,       // minus
			nil,       // times
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
		},
	},
}
